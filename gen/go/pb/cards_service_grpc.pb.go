// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.6.1
// source: cards_service.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	CardsService_ValidateCardNumber_FullMethodName = "/cards.v1.CardsService/ValidateCardNumber"
)

// CardsServiceClient is the client API for CardsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CardsServiceClient interface {
	ValidateCardNumber(ctx context.Context, in *ValidateCardNumberRequest, opts ...grpc.CallOption) (*ValidateCardNumberResponse, error)
}

type cardsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCardsServiceClient(cc grpc.ClientConnInterface) CardsServiceClient {
	return &cardsServiceClient{cc}
}

func (c *cardsServiceClient) ValidateCardNumber(ctx context.Context, in *ValidateCardNumberRequest, opts ...grpc.CallOption) (*ValidateCardNumberResponse, error) {
	out := new(ValidateCardNumberResponse)
	err := c.cc.Invoke(ctx, CardsService_ValidateCardNumber_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CardsServiceServer is the server API for CardsService service.
// All implementations must embed UnimplementedCardsServiceServer
// for forward compatibility
type CardsServiceServer interface {
	ValidateCardNumber(context.Context, *ValidateCardNumberRequest) (*ValidateCardNumberResponse, error)
	mustEmbedUnimplementedCardsServiceServer()
}

// UnimplementedCardsServiceServer must be embedded to have forward compatible implementations.
type UnimplementedCardsServiceServer struct {
}

func (UnimplementedCardsServiceServer) ValidateCardNumber(context.Context, *ValidateCardNumberRequest) (*ValidateCardNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateCardNumber not implemented")
}
func (UnimplementedCardsServiceServer) mustEmbedUnimplementedCardsServiceServer() {}

// UnsafeCardsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CardsServiceServer will
// result in compilation errors.
type UnsafeCardsServiceServer interface {
	mustEmbedUnimplementedCardsServiceServer()
}

func RegisterCardsServiceServer(s grpc.ServiceRegistrar, srv CardsServiceServer) {
	s.RegisterService(&CardsService_ServiceDesc, srv)
}

func _CardsService_ValidateCardNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateCardNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardsServiceServer).ValidateCardNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CardsService_ValidateCardNumber_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardsServiceServer).ValidateCardNumber(ctx, req.(*ValidateCardNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CardsService_ServiceDesc is the grpc.ServiceDesc for CardsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CardsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "cards.v1.CardsService",
	HandlerType: (*CardsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ValidateCardNumber",
			Handler:    _CardsService_ValidateCardNumber_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cards_service.proto",
}
